#!/bin/bash

function error {
    	echo $@ >&2
    	exit 1
}

test $# -eq 1 -o $# -eq 2 || error "Invalid arguments. Expected: $(basename "$0") <source_file> [input_file]"

srcpath="$1"
test -f "$srcpath" || error "File $srcpath does not exist!"
inputpath="$1"
if test -n "$inputpath"; then
	test -f "$inputpath" || error "File $inputpath does not exist!"
fi

extension="${1##*.}"
case "$extension" in
        cpp|py|java)
                ;;
        cxx|c++)
                extension="cpp"
                ;;
        *)
                if grep -qE '^\s*(int|void|char|string|float|long|double)\s+[a-zA-Z0-9_]' "$srcpath"; then
                        extension=cpp
                elif grep -qE '^\s*((import|from|def)\s+|(print|input|int|chr|ord)(\s*\())' "$srcpath"; then
                        extension=py
                elif grep -qE '^\s*class\s+' "$srcpath"; then
                        extension=java
                else
                        error "Unsupported programming language!"
                fi
                ;;
esac

tmppath="$(mktemp -u)" || error "Unable to generate temporary path"

if test "${1##*.}" != "$extension"; then
    	test "$extension" = "java" && newsrcpath="$srcpath.$extension" || newsrcpath="$tmppath.$extension" # In Java file we need to preserve the filename as it has to correspond with the class name
    	cp "$srcpath" "$newsrcpath" || error "Error creating temporary file $newsrcpath"
    	srcpath="$newsrcpath"
fi

function dorun() {
	case "$extension" in
    		cpp)
            		g++ -std=c++17 -Wall -O2 "$srcpath" -o "$tmppath" && "$tmppath" <&0
            		;;
    		py)
            		pypy3 "$srcpath" <&0
            		;;
    		java)
            		javac "$srcpath" && java "$(basename "${srcpath%.*}")" <&0
            		;;
	esac
}

if test -n "$inputpath"; then
	dorun < "$inputpath"
else
	dorun < &0
fi
